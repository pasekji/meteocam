#!/bin/bash

defaultClientID=						#Zde prosím vložte své client API ID, které jste si vygenerovali u služby Imgur. 				
clientID="${IMGUR_clientID:=$defaultClientID}"		
img="$1"								#První argument slouží jako vstup pro snímek.
id="$2"									#Druhý argument slouží jako vstup pro ID v databázi. 
echo "Transfering: $img"

# Funkce pro zobrazení instrukcí pro výstup 
function usage {
	echo "Usage: $(basename $0) [<filename|URL> [...]]" >&2
	echo
	echo "Upload images to imgur and output their new URLs to stdout. Each one's" >&2
	echo "delete page is output to stderr between the view URLs." >&2
	echo
	echo "A filename can be - to read from stdin. If no filename is given, stdin is read." >&2
	echo
	echo "If xsel, xclip, or pbcopy is available, the URLs are put on the X selection for" >&2
	echo "easy pasting." >&2
}

# Funkce pro nahrání cesty
# První argument by měl být srozumitelný pro curl -F parametr.
function upload {
	curl -s -H "Authorization: Client-ID $clientID" -H "Expect: " -F "image=$1" https://api.imgur.com/3/image.xml
}

# Funkce pro kontrolu argumentů
if [ "$1" == "-h" -o "$1" == "--help" ]; then
	usage
	exit 0
elif [ $# -eq 0 ]; then
	echo "No file specified; reading from stdin" >&2
	exec "$0" -
fi

# Funkce pro kontrolu, zdali je curl dostupný. 
type curl &>/dev/null || {
	echo "Couldn't find curl, which is required." >&2
	exit 17
}

clip=""
errors=false

# Loop skrze argumenty
while [ $# -gt 0 ]; do
	file="$1"
	shift

	# Nahrání snímku 
	if [[ "$file" =~ ^https?:// ]]; then
		# URL -> imgur
		response=$(upload "$file") 2>/dev/null
	else
		# File -> imgur
		# Kontrola existence souboru 
		if [ "$file" != "-" -a ! -f "$file" ]; then
			errors=true
			continue
		fi
		response=$(upload "@$file") 2>/dev/null
	fi

	if [ $? -ne 0 ]; then
		echo "Upload failed" >&2
		errors=true
		continue
	elif echo "$response" | grep -q 'success="0"'; then
		echo "Error message from imgur:" >&2
		msg="${response##*<error>}"
		echo "${msg%%</error>*}" >&2
		errors=true
		continue
	fi

	# Uložení URL a jeho výstup 
	url="${response##*<link>}"
	url="${url%%</link>*}"
	delete_hash="${response##*<deletehash>}"
	delete_hash="${delete_hash%%</deletehash>*}"
	echo $url | sed 's/^http:/https:/'
	/home/pi/Desktop/MeteoCam/ssh-transfer "$id" "$url" &	# Spuštění scriptu pro přesun výsledného ID a URL snímku do databáze na serveru. 
	echo "Delete page: https://imgur.com/delete/$delete_hash" >&2

	# Zde uložíme URL do jednoho společného stringu, abychom ho mohli později popř. zkopírovat do schránky. 
	clip+="$url"
	if [ $# -gt 0 ]; then
		clip+=$'\n'
	fi
done

# Zde se pokusíme zkopírovat URL do schránky, k provedení této činosti jsou ale potřeba balíčky xclip nebo xsel. 
if type pbcopy &>/dev/null; then
	echo -n "$clip" | pbcopy
elif [ $DISPLAY ]; then
	if type xsel &>/dev/null; then
		echo -n "$clip" | xsel
	elif type xclip &>/dev/null; then
		echo -n "$clip" | xclip
	else
		echo "Haven't copied to the clipboard: no xsel or xclip" >&2
	fi
else
	echo "Haven't copied to the clipboard: no \$DISPLAY or pbcopy" >&2
fi

if $errors; then
	exit 1
fi
